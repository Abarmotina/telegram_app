async function fetchWalletsList() {
    try {
        const response = await fetch("https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets.json");
        if (!response.ok) throw new Error("Failed to load wallets list");
        const wallets = await response.json();

        return wallets.map(w => ({
            name: w.name,
            image: w.image,
            about: w.about_url || "No description available",
            homepage: w.about_url || "https://ton.org",
            bridge: w.bridge || [],
            jsBridgeKey: w.jsBridgeKey || undefined,
            universalLink: w.universal_url || undefined
        }));
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –≥–∞–º–∞–Ω—Ü—ñ–≤:", error);
        return [];
    }
}

async function initTonConnect() {
    while (!window.TonConnectSDK) {
        console.log("–û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è TonConnectSDK...");
        await new Promise(resolve => setTimeout(resolve, 100));
    }

    console.log("TonConnectSDK –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ TonConnect...");

    const walletsList = await fetchWalletsList();
    if (!walletsList || walletsList.length === 0) {
        console.error("–°–ø–∏—Å–æ–∫ –≥–∞–º–∞–Ω—Ü—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è!");
        return;
    }

    const tonConnect = new window.TonConnectSDK.TonConnect({
        manifestUrl: "https://Abarmotina.github.io/telegram_app/tonconnect-manifest.json",
        walletsList: { wallets: walletsList } 
    });

    window.tonConnect = tonConnect;
    console.log("TonConnect —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ!");

    renderWalletSelection(walletsList);  // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤–∏–±–æ—Ä—É –≥–∞–º–∞–Ω—Ü—è
}

initTonConnect();

// üîπ –†–µ–Ω–¥–µ—Ä–∏–º–æ —Å–ø–∏—Å–æ–∫ –≥–∞–º–∞–Ω—Ü—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ –∫–Ω–æ–ø–æ–∫
function renderWalletSelection(wallets) {
    const container = document.getElementById("wallet-selection");
    container.innerHTML = ""; // –û—á–∏—Å—Ç–∏—Ç–∏ –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º

    wallets.forEach(wallet => {
        const button = document.createElement("button");
        button.innerHTML = `<img src="${wallet.image}" width="30" height="30"> ${wallet.name}`;
        button.onclick = () => connectWallet(wallet);
        container.appendChild(button);
    });
}

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –≥–∞–º–∞–Ω—Ü—è
async function connectWallet(selectedWallet) {
    try {
        const tonConnect = window.tonConnect;
        if (!tonConnect) {
            console.error("TonConnect –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ!");
            return;
        }

        console.log("–û–±—Ä–∞–Ω–∏–π –≥–∞–º–∞–Ω–µ—Ü—å:", selectedWallet);

        if (selectedWallet.jsBridgeKey) {
            await tonConnect.connect({ jsBridgeKey: selectedWallet.jsBridgeKey });
        } else if (selectedWallet.universalLink) {
            window.open(selectedWallet.universalLink, "_blank"); // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –Ω–æ–≤—ñ–π –≤–∫–ª–∞–¥—Ü—ñ
        } else {
            alert("–¶–µ–π –≥–∞–º–∞–Ω–µ—Ü—å –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ TonConnect");
        }

        console.log("–ì–∞–º–∞–Ω–µ—Ü—å –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ:", tonConnect.account);
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≥–∞–º–∞–Ω—Ü—è:", error);
    }
}

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –≤–∂–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –≥–∞–º–∞–Ω–µ—Ü—å
async function checkWalletConnection() {
    const tonConnect = window.tonConnect;
    if (!tonConnect) {
        console.error("TonConnect –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ!");
        return;
    }

    const account = tonConnect.account;
    if (account && account.address) {
        console.log("–ì–∞–º–∞–Ω–µ—Ü—å –≤–∂–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ:", account.address);
    } else {
        console.log("–ì–∞–º–∞–Ω–µ—Ü—å –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ");
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó
export { connectWallet, checkWalletConnection };
